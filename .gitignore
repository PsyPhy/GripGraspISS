## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo 
# The Visual Studios ignore set from GitHub ignores user preferences, but that 
#  means that things like Debug Options are not shared. I am re-enabling *.user to 
#  share them as well, but this may have side effects. So watch out. Joe
# *.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
#*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Azure Emulator
efc/
rfc/

# Windows Store app package directory
AppPackages/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe

# FAKE - F# Make
.fake/

# =========================
# Operating System Files
# =========================

# OSX
# =========================

.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# =========================

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# PsyPhy specific ignores
Source Code/GRASPonISS.suo
# Utils are execcutables and associated files that are needed at run time,
# but that are not generated by our own code. Most of them should be tracked,
# but WinSCP uses a .ini file that should not be tracked across machines.
Utils/WinSCP.ini
# Results is where the results will go in the runtime environment. No need to track them.
Results
Results/*
# The following are different types of result files that if they occur outside the Results
# tree they can still be ignored.
*.mrk
*.pse
*.mlf
# The cache is used at runtime as well and should not be tracked.
Cache/*
Cache
# Some .ini files reside in the root directory. They may be configured for a
# specific machine and should therefore not be tracked. But on the other hand, what if
# a global change is required across machines? We should think about this one.
CodaRTnet.ini
# A set of "cookie" files the existance of which determine certain behaviors. 
# These are usually set to override default behavior and so should not be tracked.
NoCoda.flg
FakeCoda.flg
LegacyCoda.flg
*.flg
# DexServices creates a local log of information sent to DEX. These local logs are 
# generated at runtime and need not be tracked.
Source Code/TestDexServices/TestDexServices.dxl
DexServices.dxl
GraspGUI.dxl
TestGrasp.dxl
*.dxl
# GraspGUI writes out some temporary files to keep track of where we were after a crash.
GraspLastAction.txt
GraspRemainingTrials.seq
# The contents of the following directories are created during the build process.
GraspMMIExecutables
GripMMIExecutables
Documentation
Executables
Instructions
Sequences
Bmp
# The following bitmaps are generated by the makefile using GraspScreenshots.
# So they should not be tracked.
Source Code/GraspScreenShots/*.bmp
Source Code/GraspInstructionTypesetting/Pictures/StraightenHeadCyan.bmp
Source Code/GraspInstructionTypesetting/Pictures/StraightenHeadGreen.bmp
Source Code/GraspInstructionTypesetting/Pictures/StraightenHeadRed.bmp
Source Code/GraspInstructionTypesetting/Pictures/StraightenHeadYellow.bmp
Source Code/GraspInstructionTypesetting/Pictures/StraightenHeadBlue.bmp
Source Code/GraspInstructionTypesetting/GraspWelcome.html
Source Code/GraspInstructionTypesetting/*.*.html
Source Code/GraspInstructionTypesetting/install
Source Code/GraspInstructionTypesetting/redo
Source Code/GraspBMPs/install
Source Code/GraspBMPs/*.bmp
Source Code/GraspBMPs/*.tiff
Source Code/GraspBMPs/*.bmp.html
Source Code/GraspBMPs/GraspVRMessages.pdf
Source Code/GraspBMPs/GraspVRMessages.html
Source Code/ForceRebuild/CommonTimestamp.h
# Grasp documentation files are generated automatically in part, so the 
# intermediate files should not be tracked.
Source Code/GraspDocumentation/*.bmp
Source Code/GraspDocumentation/*.pdf
Source Code/GraspDocumentation/*.html
# We sometimes use a timestamp file to indicate when another group of files
# was last built. Those timestamps can be ignored so as to force a rebuild.
install
# The following is self explanatory.
DeleteMe
DeleteMe*
# The batch files placed in the root directory to run the different services.
# These are generated as part of the build process and so should not be tracked.
RunGRASP.bat
RunGRIPMMI.bat
RunGRASPMMI.bat

